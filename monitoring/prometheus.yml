# Prometheus Configuration for Universal AI Customer Service Platform
# Comprehensive monitoring setup with service discovery and alerting

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'universal-ai-cs-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load alerting rules
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # API Gateway monitoring
  - job_name: 'api-gateway'
    static_configs:
      - targets: ['api-gateway:3000']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # AI Service monitoring
  - job_name: 'ai-service'
    static_configs:
      - targets: ['ai-service:3001']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Integration Service monitoring
  - job_name: 'integration-service'
    static_configs:
      - targets: ['integration-service:3002']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Analytics Service monitoring
  - job_name: 'analytics-service'
    static_configs:
      - targets: ['analytics-service:3003']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Workflow Service monitoring
  - job_name: 'workflow-service'
    static_configs:
      - targets: ['workflow-service:3004']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s

  # PostgreSQL monitoring
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics

  # Redis monitoring
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics

  # NGINX monitoring
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s
    metrics_path: /metrics

  # Blackbox exporter for endpoint monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://api.universalai-cs.com/health
        - https://app.universalai-cs.com
        - https://admin.universalai-cs.com
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Kubernetes monitoring (if using K8s)
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Custom application metrics
  - job_name: 'custom-metrics'
    static_configs:
      - targets: ['custom-metrics-exporter:8080']
    scrape_interval: 30s
    metrics_path: /metrics

# Remote write configuration (for long-term storage)
remote_write:
  - url: "https://prometheus-remote-write.example.com/api/v1/write"
    basic_auth:
      username: "prometheus"
      password: "secure_password"
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*|process_.*|prometheus_.*'
        action: drop

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 50GB
    wal-compression: true
